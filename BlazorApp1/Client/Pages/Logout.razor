@page "/logout"

@code
{
    [Inject]
    HttpClient Client { get; set; }

    [Inject]
    NavigationManager NavManager { get; set; }

    [Inject]
    ILocalStorageService localStorageService { get; set; }

    [Inject]
    AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await localStorageService.RemoveItemAsync("token");
        await localStorageService.RemoveItemAsync("email");

        (AuthenticationStateProvider as AuthStateProvider).NotifyUserLogout();
        Client.DefaultRequestHeaders.Authorization = null;

        NavManager.NavigateTo("/login");
    }
}